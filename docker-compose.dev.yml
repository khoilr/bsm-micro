version: '3'

services:
    rabbitmq:
        image: 'rabbitmq:3-management'
        ports:
            - '50000:5672'
            - '51000:15672'
        healthcheck:
            test: ['CMD', 'rabbitmq-diagnostics', 'status']
            interval: 20s
            timeout: 10s
            retries: 10
        environment:
            RABBITMQ_DEFAULT_USER: rabbitmq
            RABBITMQ_DEFAULT_PASS: rabbitmq
            RABBITMQ_DEFAULT_VHOST: /
        networks:
            - bsm-micro

    camera-frame-capture:
        restart: always
        build:
            context: camera-frame-capture
        depends_on:
            rabbitmq:
                condition: service_healthy
        environment:
            RABBITMQ_HOST: rabbitmq
            RABBITMQ_PORT: 5672
            RABBITMQ_USER: rabbitmq
            RABBITMQ_PASSWORD: rabbitmq
            RABBITMQ_VHOST: /
            RABBITMQ_EXCHANGE: frames
            RABBITMQ_EXCHANGE_TYPE: fanout
            CAMERA_URL: 0
            CAMERA_INFO: Living Room
        networks:
            - bsm-micro

    face-identification:
        restart: always
        build:
            context: face-identification
        depends_on:
            rabbitmq:
                condition: service_healthy
        environment:
            RABBITMQ_HOST: rabbitmq
            RABBITMQ_PORT: 5672
            RABBITMQ_USER: rabbitmq
            RABBITMQ_PASSWORD: rabbitmq
            RABBITMQ_VHOST: /
            RABBITMQ_EXCHANGE: frames
        networks:
            - bsm-micro
        volumes:
            - ./face-identification:/app/face-identification

networks:
    bsm-micro:
        driver: bridge
